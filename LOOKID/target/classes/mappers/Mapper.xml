<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lookid.server.dao.Mapper">

	<!-- 
	예약 당일 여부 확인 
	&lt;=  :  <=
	&gt;=  :  >=
	-->
	<select id="today" resultType="lookid.server.dto.RvPidDTO">
		select rv_pid from reservation where user_pid=#{user_pid} and s_date &lt;= #{now} and e_date &gt;= #{now}
	</select>

	<!-- 예약 내역 조회 -->
	<select id="reservation_list" parameterType="int" resultType="lookid.server.dto.ReservationListDTO">
		select rv_pid,r_name,s_date,e_date,state from reservation where user_pid=#{user_pid}
	</select>
	
	<!-- 예약 상세 조회 -->
	<select id="reservation_detail" resultType="lookid.server.dto.ReservationDTO">
		select rv_pid,r_name,r_date,s_date,e_date,name,phone,bank_name,bank_num,bank_holder,receipt_item,return_item,address,wb_num,cost,deposit,state
		from reservation where rv_pid=#{rv_pid}
	</select>
	
	<!-- 그룹 상세 조회 -->
	<select id="group_detail" resultType="lookid.server.dto.GroupDTO">
		select g_pid,g_name,count from groups where rv_pid=#{rv_pid}
	</select>
	
	<!-- child 상세 조회 -->
	<select id="child_detail" resultType="String">
		select c_name from child where g_pid=#{g_pid}
	</select>
	
	<!-- admin 상세조회 -->
	<select id="admin_detail" resultType="lookid.server.dto.FindAdminDTO">
		select user_pid,id,name from user where user_pid=(select user_pid from admin where g_pid=#{g_pid})
	</select>

	<!-- 예약 정보 생성 -->
	<insert id="reservation_create" parameterType="lookid.server.vo.ReservationVO" useGeneratedKeys="true" keyProperty="rv_pid">
		insert into reservation
		(user_pid,r_name,r_date,s_date,e_date,name,phone,bank_name,bank_num,bank_holder,receipt_item,return_item,address,wb_num,cost,deposit,state)
		values
		(#{user_pid},#{r_name},#{r_date},#{s_date},#{e_date},#{name},#{phone},#{bank_name},#{bank_num},#{bank_holder},#{receipt_item},#{return_item},#{address},#{wb_num},#{cost},#{deposit},#{state})
	</insert>

	<!-- 그룹 정보 생성 -->
	<insert id="group_create" parameterType="lookid.server.vo.GroupVO" useGeneratedKeys="true" keyProperty="g_pid">
		insert into groups (rv_pid,g_name,count) values (#{rv_pid},#{g_name},#{count})
	</insert>
	
	<!-- child 정보 생성 -->
	<insert id="child_create">
		insert into child (g_pid,c_name) values 
		<foreach collection="children" item="item" separator=",">
		(${g_pid},"${item}")
		</foreach>
	</insert>
	
	<!-- admin 정보 생성 -->
	<insert id="admin_create">
		insert into admin (user_pid,g_pid) values
		<foreach collection="admins" item="item" separator=",">
		(${item},${g_pid})
		</foreach>
	</insert>
	
	<!-- 에약 정보 수정 -->
	<update id="reservation_modify" parameterType="lookid.server.vo.ReservationVO">
		update reservation set 
		r_name=#{r_name},r_date=#{r_date},s_date=#{s_date},e_date=#{e_date},name=#{name},phone=#{phone},bank_name=#{bank_name},bank_num=#{bank_num},bank_holder=#{bank_holder},receipt_item=#{receipt_item},return_item=#{return_item},address=#{address},wb_num=#{wb_num},cost=#{cost},deposit=#{deposit},state=#{state}
		where rv_pid=#{rv_pid}
	</update>
	
	<!-- 그룹 정보 수정 -->
	<update id="group_modify" parameterType="lookid.server.vo.GroupVO">
		update groups set g_name=#{g_name}, count=#{count} where g_pid=#{g_pid}
	</update>
	
	<!-- child 정보 수정을 위한 chide 정보 삭제 -->
	<delete id="child_delete" parameterType="int">
		delete from child where g_pid=#{g_pid}
	</delete>
	
	<!-- admin 정보 수정을 위한 admin 정보 삭제 -->
	<delete id="admin_delete" parameterType="int">
		delete from admin where g_pid=#{g_pid}
	</delete>
	
	<!-- 예약 삭제 -->
	<delete id="reservation_delete">
		delete from reservation where rv_pid=#{rv_pid}
	</delete>	

</mapper>